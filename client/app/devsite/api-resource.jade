include api-schema.jade
include ../template/_mixins

mixin resource(resource)

	if !resource.parentUrl
		h1.h--primary=resource.displayName
		hr
		.markdown!=hlp.markdown(resource.description)

	if resource.methods && resource.methods.length
		h2.h--code.h--small
			| #{resource.parentUrl}
			span.h--lighter=resource.relativeUri
		hr
		each method in resource.methods
			.clearfix
			.apidoc-method-wrapper(ng-controller="MethodCollapseCtrl")
				.apidoc-method(ng-click="isCollapsed = !isCollapsed", ng-init="resource= { method: '#{method.method}', parentUrl: '#{resource.parentUrl}' }")
					.badge.badge--verb(class="badge--verb--#{method.method}")=method.method
					| !{hlp.short(method.description)}
					.pull-right
						each scope in hlp.authscopes(method.securedBy)
							i.space-left(class=hlp.authscope(scope).classes, title=hlp.authscope(scope).title)
				.clearfix
				div(collapse="isCollapsed")
					.well.well--full-width
						tabset.tabset--transparent

							//------------------------------------------
							//- OVERVIEW
							//------------------------------------------
							tab(heading="Overview")
								.markdown!=hlp.markdown(method.description)

								p: u Authorization:
								each scope in hlp.authscopes(method.securedBy)
									i.space-right(class=hlp.authscope(scope).classes)
									.nobreak !{hlp.markdown(hlp.authscope(scope).description)}
									br

							//------------------------------------------
							//- REQUEST
							//------------------------------------------
							tab(heading="Request")

								//------------------------------------------
								//- uri parameters
								//------------------------------------------
								if resource.allUriParameters && resource.allUriParameters.length > 0
									p: u URI Parameters:
									ul.list
										each param in resource.allUriParameters
											li
												strong=param.displayName
												| &nbsp;
												em (#{param.type})
												if param.pattern
													code #{param.pattern}

								//------------------------------------------
								//- query parameters
								//------------------------------------------
								if method.queryParameters
									p: u Query Parameters:
									ul.list
										each param, key in method.queryParameters
											li.markdown
												strong=key
												if param.required
													| &nbsp;
													span.badge.badge--small required
												if param.enum
													| &nbsp;
													em one of (#{param.enum})
												else
													| &nbsp;
													em (#{param.type})
												if param.default
													| &nbsp;
													| (defaults to #{param.default})

												if param.description
													| !{hlp.markdown(param.description)}
												if param.schema
													p: small
														strong Schema:
														code!=param.schema

												if param.example
													p: small
														em Example:
														| &nbsp;
														code!=param.example

								//------------------------------------------
								//- headers
								//------------------------------------------
								if method.headers
									p: u Headers:
									ul.list
										each header, headername in method.headers
											li.markdown
												strong=headername
												if header.required
													| &nbsp;
													span.badge.badge--small required
												if header.enum
													| &nbsp;
													em one of (#{header.enum})
												else
													| &nbsp;
													em (#{header.type})
												if header.displayName && header.displayName != headername
													| &nbsp;&mdash;
													| #{header.displayName}
												if header.description
													| !{hlp.markdown(header.description)}

								//------------------------------------------
								//- schema
								//------------------------------------------
								if method.body
									each b, key in method.body
										if b.schema
											p: u #{hlp.splitType(key, 'Fields').name}:
											tabset.padder-bottom-2x
												tab(heading="Schema")
													+jsonSchema(hlp.schema(b.schema, { method: method.method, type: 'request', path: resource.parentUrl + resource.relativeUri, filter: { readOnly: false }}))
												tab(heading="Raw")
													pre!=hlp.highlight(b.schema)

									- var n = 0;
									each r, name in hlp.requestByType(method.body)
										p(class=n ? 'padder-top' : ''): u= name === 'default' ? 'Example Request:' : name + ':'
										- n++;
										tabset
											i.pull-right(class=hlp.authscope(r.role).classes, title="With #{hlp.authscope(r.role).title}")
											tab(heading="HTTP")
												pre!=hlp.highlight(r.request.example, true)
											tab(heading="Curl")
												pre!=hlp.toCurl(r.request.example)

							//------------------------------------------
							//- RESPONSE
							//------------------------------------------
							if method.responses
								tab(heading="Response")

									each response, statusCode in method.responses

										//------------------------------------------
										//- headers
										//------------------------------------------
										if response.headers
											p: u Headers:
											ul.list
												each header, headername in response.headers
													li
														strong=headername
														| : #{header.type}
														if header.description
															| !{hlp.markdown(header.description)}

										//------------------------------------------
										//- schema
										//------------------------------------------
										if response.body
											each rb, contentType in response.body
												if rb && rb.schema
													p: u #{hlp.splitType(contentType, 'Fields').name}:
													tabset.padder-bottom-2x
														tab(heading="Schema")
															+jsonSchema(hlp.schema(rb.schema, { method: method.method, type: 'response', path: resource.parentUrl + resource.relativeUri }))
														tab(heading="Raw")
															pre!=hlp.highlight(rb.schema)

									p: u Error Codes:
									ul.list
										each response, statusCode in method.responses
											if statusCode > 299
												li
													a.a--lighter(href='http://httpstatus.es/#{statusCode}', target='_blank'): strong=statusCode
													if (response.description)
														.nobreak &nbsp;&mdash; !{hlp.markdown(response.description)}

									//------------------------------------------
									//- response body
									//------------------------------------------
									- var n = 0;
									each responses, name in hlp.responseByType(method.responses)
										p(class=n ? 'padder-top' : ''): u= name === 'default' ? 'Example Response:' : name + ':'
										- n++;
										tabset
											each r in responses
												tab
													tab-heading
														i.space-right(class=hlp.authscope(r.role).classes, title="#{hlp.authscope(r.role).title} results in...")
														+icon('arrow-right').space-right.shift-up
														span #{r.code}
													pre!=hlp.highlight(r.response.example, true)


	p.padder-bottom

	//- recursively traverse sub-resources
	if resource.resources
		each subResource in resource.resources
			+resource(subResource)

+resource(resource)