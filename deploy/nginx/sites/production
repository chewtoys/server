server {

	pagespeed on;
	pagespeed FileCachePath /var/cache/nginx-pagespeed;
	# Ensure requests for pagespeed optimized resources go to the pagespeed handler and no extraneous headers get set.
	location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
		add_header "" "";
	}
	location ~ "^/pagespeed_static/" { }
	location ~ "^/ngx_pagespeed_beacon$" { }

	set $build_directory    /var/www/production/current/build;
	set $project_directory  /var/www/production/current;

	listen 443 ssl spdy default_server;
	server_name production.vpdb;

	charset utf-8;

	# path to your certs
	ssl_certificate      /etc/nginx/ssl/vpdb.crt;
	ssl_certificate_key  /etc/nginx/ssl/vpdb.key;

	ssl_ciphers               ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
	ssl_buffer_size           8k;
	ssl_prefer_server_ciphers on;
	ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;

	# if you're using a signed certificate
	#ssl_stapling              on;
	#ssl_stapling_verify       on;
	#ssl_trusted_certificate   /etc/nginx/ssl/vpdb.chain.pem;

	# protect this
	auth_basic "Restricted";
	auth_basic_user_file /var/www/.htpasswd;

	# this goes to node, everything else is static file serving
	location ~ (^/(api(-mock)?|avatars|asset|packs)/|^/storage|^/auth/[^/]+$) {
		client_max_body_size 200M;
		proxy_pass http://vpdb_production_upstream;
		proxy_redirect off;
		proxy_set_header X-Real-IP         $remote_addr;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host              $http_host;
		proxy_set_header X-NginX-Proxy     true;
		proxy_set_header Connection "";
		proxy_pass_request_headers         on;
		proxy_http_version 1.1;

		expires 0;
		add_header Cache-Control private;

		location ~ ^/storage/ {
			proxy_pass http://vpdb_staging_upstream;
			expires max;
			add_header Cache-Control private;
		}

		location ~ ^/(api-mock|avatars|asset|packs)/ {
			proxy_pass http://vpdb_staging_upstream;
			expires max;
			add_header Cache-Control public;
		}
	}

	# style guide
	location ~ ^/styleguide {
		root $project_directory;
		try_files $uri /styleguide/index.html;
		access_log off;
		add_header Cache-Control public;
		expires max;
	}

	# map html files to root
	location ~ \.html$ {
		root $build_directory/html;
		add_header Cache-Control public;
		expires max;
	}

	# map files to build folder
	location / {
		root $build_directory;
		access_log off;
		expires -1;
		add_header Cache-Control public;

		location /css/ {
			expires max;
		}
		location /js/ {
			expires max;
		}
		location /images/ {
			expires 24h;
		}
	}

	# map root to index
	location = / {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control public;
	}

	# map directories to index
	location ~ \/[^\.]*$ {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control public;
	}

	# map favicons to root
	location ~ ^/(favicon|mstile|apple-touch-icon) {
		root $build_directory/images/favicon;
		access_log off;
		expires max;
		add_header Cache-Control public;
	}
}

# redirect to https
server {
	listen 80;
	server_name production.vpdb;
	return 301 https://production.vpdb:$request_uri;
}
