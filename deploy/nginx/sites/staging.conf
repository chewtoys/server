server {

	set $build_directory    /var/www/staging/current/build;
	set $public_directory   /data/storage-public;

	listen 443 ssl http2;
	server_name staging.vpdb;

	charset utf-8;

	# SSL tweaking links:
	#    - https://certsimple.com/blog/chrome-outdated-cryptography
	#    - https://mozilla.github.io/server-side-tls/ssl-config-generator/
	#    - http://www.nginxtips.com/hardening-nginx-ssl-tsl-configuration/
	#    - https://istlsfastyet.com/

	# path to your certs
	ssl_certificate /etc/nginx/ssl/staging-keychain.crt;
	ssl_certificate_key /etc/nginx/ssl/staging.key;
	ssl_session_timeout 1d;

	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	ssl_dhparam /etc/nginx/ssl/dhparam.pem;

	# intermediate configuration. tweak to your needs.
	ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers               ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
	ssl_prefer_server_ciphers on;

	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;

	## verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /etc/nginx/ssl/ca-keychain.pem;


	# protect this
	auth_basic "Restricted";
	auth_basic_user_file /var/www/.htpasswd;

	location ~ /.well-known {
		root /etc/nginx/ssl/letsencrypt;
		auth_basic "off";
		allow all;
	}

	location ~ ^/storage/v1/files/([^/]+)/small {
		more_set_headers 'Content-Type: image/jpg';
		alias /data/storage/small/$1.jpg;
	}

	# this goes to node, everything else is static file serving
	location ~ (^/api/|^/storage|^/auth/[^/]+$) {
		client_max_body_size 200M;
		expires 0;
		add_header Cache-Control private;

		proxy_pass http://localhost:3003;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	# map html files to root
	location ~ \.html$ {
		root $build_directory/html;
		etag on;
	}

	# map public assets
	location /public/files {
		alias $public_directory;
		access_log off;
		expires 30d;
		add_header Cache-Control public;
		etag on;
	}

	# map files to build folder
	location / {
		root $build_directory;
		access_log off;
		expires 30d;
		add_header Cache-Control public;

		location /css/ {
			etag on;
		}
		location /js/ {
			etag on;
		}
		location /images/ {
			expires 24h;
		}
	}

	# map root to index
	location = / {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control public;
		etag on;
	}

	# map directories to index
	location ~ \/[^\.]*$ {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control public;
		etag on;
	}

	# map favicons to root
	location ~ ^/(favicon|mstile|apple-touch-icon) {
		root $build_directory/images/favicon;
		access_log off;
		expires max;
		add_header Cache-Control public;
		etag on;
	}
}

# redirect to https
server {
	listen 80;
	server_name staging.vpdb;
	return 301 https://staging.vpdb$request_uri;
}
