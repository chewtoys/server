server {

	set $build_directory /var/www/production/current/build;

	listen 443 ssl http2;
	server_name vpdb;

	charset utf-8;

	# path to your certs
	ssl_certificate      /etc/nginx/ssl/keychain.crt;
	ssl_certificate_key  /etc/nginx/ssl/key.key;
	ssl_session_timeout 1d;

	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	ssl_dhparam /etc/nginx/ssl/dhparam.pem;

	# intermediate configuration. tweak to your needs.
	ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers               ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
	ssl_prefer_server_ciphers on;

	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;

	# verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /etc/nginx/ssl/ca-keychain.pem;

	# cache config
	set $cache_static_html "no-transform,public,max-age=3600,s-maxage=900";
	set $cache_static_images "no-transform,public,max-age=86400";
	set $cache_dynamic "private,max-age=0,no-cache,no-store";
	set $cache_forever "no-transform,public,max-age=31536000";

	# letsencrypt renewal path
	location ~ /.well-known {
		root /etc/nginx/ssl/letsencrypt;
		auth_basic "off";
		allow all;
	}

	# map html files
	location ~ \.html$ {
		root $build_directory/html;
		add_header Cache-Control $cache_static_html;
	}

	# auth callback also gets index.html
	location ~ ^\/auth\/[^\/]+/callback {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control $cache_static_html;
	}

	# the only "dynamic" route
	location ~ ^\/auth {
		add_header Cache-Control $cache_dynamic;

		proxy_pass http://localhost:3000;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_cache_bypass $http_upgrade;
	}

	# map files to build folder
	location / {
		root $build_directory;
		access_log off;
		add_header Cache-Control $cache_static_html;

		location /css/ {
			add_header Cache-Control $cache_forever;
		}
		location /js/ {
			add_header Cache-Control $cache_forever;
		}
		location /fonts/ {
			add_header Cache-Control $cache_forever;
		}
		location /images/ {
			add_header Cache-Control $cache_static_images;
		}
	}

	# map root to index
	location = / {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control $cache_static_html;
	}

	# map directories to index
	location ~ \/[^\.]*$ {
		root $build_directory/html;
		try_files /index.html =404;
		add_header Cache-Control $cache_static_html;
	}

	# map favicons to root
	location ~ ^/(favicon|mstile|apple-touch-icon) {
		root $build_directory/images/favicon;
		access_log off;
		add_header Cache-Control no-transform,public,max-age=2592000;
	}
}

# redirect to https
server {
	listen 80;
	server_name vpdb;
	return 301 https://vpdb$request_uri;
}