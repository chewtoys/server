displayName: Users
description: Registered users. **Markdown** *test*.
post:
  is: [ validated ]
  description: |
    Register a new user.

    New users post their username, email and password to this resource and
    receive their profile in return.
  body:
    application/json:
      schema: !include schema-register.json
      example: !include post-req.json
  responses:
    201:
      body:
        application/json:
          schema: !include schema-detailed.json
          example: !include post-res-201.json
    422:
      body:
        application/json:
          example: !include post-res-422.json

get:
  is: [ protected ]
  description: |
    List all users.

    Note that only administrators can really *list* all users, anonymous users
    must provide a search query and will get limited user info.
  securedBy: [ jwt: { scopes: [ ADMIN, MEMBER ] } ]
  queryParameters:
    q:
      description: |
        Search query. As administrator, any length is allowed, anonymous must
        provide at least three characters.
      required: false
      minLength: 3
      type: string
      example: freez
  body:
      application/json:
        example: !include list-req.json
  responses:
    200:
      body:
        application/json:
          example: !include list-res-200.json
    401:
      body:
        application/json:
          example: !include list-res-401.json
    403:
      description: You tried to list all users as a member. Members must provide a search query.
      body:
        application/json:
          example: !include list-res-403.json

/{user_id}:
  description: User entity
  get:
    is: [ protected ]
    securedBy: [ jwt: { scopes: [ ADMIN ] } ]
    description: Get the user with a given ID.
    headers:
      Zencoder-Api-Key:
        displayName: ZEncoder API Key
      X-Zencoder-Job-Metadata:
        description: |
          Field names prefixed with `X-Zencoder-Job-Metadata` contain user-specified metadata.
          The API does not validate or use this data. All metadata headers will be stored
          with the job and returned to the client when this resource is queried.
        type: string
        required: true
        minLength: 30
        maxLength: 30
        example: abcdefghijabcdefghijabcdefghij$
    body:
      application/json:
        example: !include details-req.json
    responses:
      200:
        body:
          application/json:
            example: !include details-res-200.json
  