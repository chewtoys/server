displayName: Builds
description: |
  When submitting table files for a [release][release], every file must
  reference at least one compatible build of Visual Pinball.

  A build can be an official release, a daily build or an experimental test
  build.

  Note that this resource doesn't contain the actual build but acts as a
  marker, similar to [tags][tag]. The primary goal is to inform the user about
  the VP table's compatibility as well as easily filtering releases that
  contain table files for a given build.

  Also note that even though we're explicitly talking about Visual Pinball builds,
  the schema is ready for additional type of builds (Future Pinball, Unity 3D
  Pinball, etc)

  [release]: api://core/releases
  [tag]: api://core/tags

post:
  is: [ validated ]
  securedBy: [ jwt: { scopes: [ MEMBER ] } ]
  description: |
    Create a new build.

  body:
    role/member:
      schema: build
      example: !include http/create-req.json
  responses:
    201:
      body:
        role/member:
          schema: build
          example: !include http/create-res-201.json
    422:
      body:
        role/member:
          example: !include http/create-res-422.json

get:
  securedBy: [ ]
  description: |
    List builds.

    Note that this resource isn't paginated, there should only a few dozen
    of builds for some time.
  body:
    role/anon:
      example: !include http/list-req.json
  responses:
    200:
      body:
        role/anon:
          example: !include http/list-res-200.json

/{build_id}:
  get:
    securedBy: [ ]
    description: Fetch details for a given build
    body:
      role/anon:
        example: !include http/view-req.json
    responses:
      200:
        body:
          role/moderator:
            example: !include http/view-res-200.json
  patch:
    is: [ protected ]
    securedBy: [ jwt: { scopes: [ MODERATOR ] } ]
    description: Update a given build.
    body:
      role/moderator:
        example: !include http/update-req.json
    responses:
      200:
        body:
          role/moderator:
            example: !include http/update-res-200.json
      422:
        body:
          role/moderator:
            example: !include http/update-res-422.json
  delete:
    is: [ protected ]
    securedBy: [ jwt: { scopes: [ MEMBER, CONTRIB ] } ]
    description: |
      Delete a build of a given ID.

      Members can only delete own builds, while contributors can delete any build.
    responses:
      401:
        body:
          role/anon:
            example: !include http/del-res-401.json
      403:
        body:
          role/member:
            example: !include http/del-res-403.json