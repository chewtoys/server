displayName: Games
description: |
  A game is a *pinball table*.

  A game describes the nature of a pinball table independently from its digital
  recreation. It is *decoupled* from its actual [release][release] but acts as
  parent, meaning every release is linked to a game.

  A game usually exists in the real world and the data that can be found in
  this entity reflect that factor. However, for *original games* this might not
  be the case. For this reason, some of the fields you might expect to be
  mandatory are not.

  [release]: api://core/releases

post:
  is: [ validated ]
  securedBy: [ jwt: { scopes: [ CONTRIB ] } ]
  description: |
    Create a new game.

    Note that prior to that request, the needed media needs to be uploaded so
    it can be referenced.
  body:
    role/contrib:
      schema: game
      example: !include http/create-req.json
  responses:
    201:
      body:
        role/contrib:
          schema: game
          example: !include http/create-res-201.json
get:
  securedBy: [ ]
  is: [ paginated: { defaultPerPage: 12, maxPerPage: 60 } ]
  description: |
    List all games.

    Using query parameters described in the *Request* tab, this resource also
    allows searching for games.
  queryParameters:
    q:
      description: |
        Search query. Searches `title` and matches `id`.
      required: false
      minLength: 2
      type: string
      example: sttng
    mfg:
      description: |
        Filter by manufacturer. Can be a comma-separated list which results in
        an `or` expression.

        Note that the names are case-sensitive, i.e. you should use "Gottlieb"
        instead of "gottlieb".
      required: false
      type: string
      example: Gottlieb,Capcom
    decade:
      description: |
        Filter by decade. Can be a comma-separated list which results in an
        `or` expression.

        Note that the decade is defined by its first year. The full year should
        be provided.
      required: false
      type: string
      example: 1990,2010
  body:
    role/anon:
      example: !include http/list-req.json
  responses:
    200:
      body:
        role/anon:
          example: !include http/list-res-200.json
    400:
      description: Invalid query parameters provided.
      body:
        role/anon-Search-for-a-Game:
          example: !include http/search-res-400.json

/{game_id}:
  get:
    description: |
      List details of a game.

  /roms: !include roms.raml
