displayName: ROMs
description: |
  ROMs are the game code of modern pinball machines. It's the program that
  runs while playing the table. They are needed for recreations of solid state
  games.

  There are usually different versions and languages available. Every game can
  have one or multiple game ROMs.

  Note that for listing and creating ROMs, there are also end-points available
  under the [game resource][games].

  [games]: api://core/games

get:
  securedBy: [ ]
  is: [ paginated: { defaultPerPage: 10, maxPerPage: 50 } ]
  description: |
    List all ROMs.

    ROMs can be filtered by game ID like [under games][games-roms] but also by
    IPDB number, which is useful for checking if a ROM for a non-existing game
    already exists.

    [games-roms]: api://core/get/games/{game_id}/roms

  queryParameters:
    game_id:
      description: Only list ROMs for given game.
      required: false
      type: string
      example: tom
    ipdb_number:
      description: Only list ROMs for given IPDB number.
      required: false
      type: integer
      example: 2845
  body:
      role/member:
        example: !include http/list-req.json
  responses:
    200:
      body:
        role/member:
          example: !include http/list-res-200.json

post:
  is: [ protected ]
  securedBy: [ jwt: { scopes: [ MEMBER, CONTRIB ] } ]
  description: |
    Create a ROM file.

    Contrarily to [`/games/{game_id}/roms`](api://core/post/games/{game_id}/roms),
    this allows posting ROMs for games that aren't in the database yet. Then
    once the game is created, the uploaded ROMs will be linked and visible.
    If the game already exists, the ROM is immediately linked as if you had
    posted to the other endpoint.
  body:
    role/member:
      example: !include http/create-req.json
  responses:
    200:
      body:
        role/member:
          example: !include http/create-res-201.json
/{rom_id}:
  delete:
    is: [ protected ]
    securedBy: [ jwt: { scopes: [ MEMBER, CONTRIB ] } ]
    description: |
      Delete a ROM of a given ID.

      Members can only delete own ROMs, while contributors can delete any ROM.
    body:
        role/member:
          example: !include http/del-req.json
    responses:
      200:
        body:
          role/member:
            example: !include http/del-res-204.json