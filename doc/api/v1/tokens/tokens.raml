displayName: Tokens
description: |
  Tokens are an alternative way apart from JWT access tokens to authenticate.
  The main difference is that they are stored on server side and can be revoked
  any time. Therefore, they are long-lived and useful in scenarios where the
  user decides to "store" the credentials without the need of saving the
  password.

  There are two type of tokens:

  1. Application **access tokens** function like ordinary JWT access tokens.
     They can be used in the header for full API access. Their goal is to
     give third party applications access to the API without having to hand
     them your password.
  2. **Login tokens** are restricted to the [authenticate resource][authenticate]
     and are a way of letting the browser "remember" your credentials.

  Both type of tokens are currently valid for one year and can be revoked any
  time. For login tokens, the browser would typically delete its login token as
  soon as the user logs out.

  [authenticate]: api://core/authenticate

post:
  is: [ validated ]
  securedBy: [ jwt: { scopes: [ MEMBER ] } ]
  description: |
    Create a new application access token.

    Due to the sensibility of this request, the user's password must be
    provided.

    Additionally, the response of this request is the only way to retrieve the
    actual token, listing will only return the meta data.

  body:
    role/member:
      example: !include http/create-req.json
  responses:
    201:
      body:
        role/member:
          example: !include http/create-res-201.json
    401:
      description: Password not provided.
      body:
        role/member:
          example: !include http/create-res-401.json

get:
  securedBy: [ jwt: { scopes: [ MEMBER ] } ]
  description: |
    List all application access tokens.

    Note there is no actual token returned. If a token was not copied and saved
    after creation, it can be deleted and must be re-created.

  body:
    role/member:
      example: !include http/list-req.json
  responses:
    200:
      body:
        role/member:
          example: !include http/list-res-200.json

/{token_id}:
  patch:
    is: [ protected ]
    securedBy: [ jwt: { scopes: [ MEMBER ] } ]
    description: |
      Updates any number of fields of a token.

      Allowed fields are `label`, `is_active` and `expires_at`.

    body:
      role/member:
        example: !include http/patch-req.json
    responses:
      200:
        body:
          role/member:
            example: !include http/patch-res-200.json
      422:
        body:
          role/member:
            example: !include http/patch-res-422.json

  delete:
    is: [ protected ]
    securedBy: [ jwt: { scopes: [ MEMBER ] } ]
    description: |
      Delete an application access token of a given ID.

      As soon as the token is deleted, any third party applications that are
      still configured with it, won't get authenticated anymore.

    body:
      role/member:
        example: !include http/del-req.json
    responses:
      204:
        body:
          role/member:
            example: !include http/del-res-204.json
